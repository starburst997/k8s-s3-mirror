namespace: s3-mirror

replicaCount: 2

image:
  repository: ghcr.io/starburst997/s3-mirror
  pullPolicy: Always
  tag: "" # Defaults to chart appVersion

# Ingress Configuration (for wildcard subdomain support)
# Enable this if you need virtual-hosted-style S3 (forcePathStyle: false)
# Note: Path-style (forcePathStyle: true) works without any ingress
ingress:
  enabled: false
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Add other annotations as needed for your ingress controller

  # Simple mode: just specify a host (uses path: /(.*) and pathType: ImplementationSpecific by default)
  host: "*.s3.local" # Change to your internal domain

  # Advanced mode: full control over hosts and paths (uncomment and remove 'host' above to use)
  # hosts:
  #   - host: "*.s3.local"
  #     paths:
  #       - path: /(.*)
  #         pathType: ImplementationSpecific

  tls: [] # Configure TLS if needed for internal HTTPS

imagePullSecrets: []

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  # Optional: Set a fixed ClusterIP if you still want to use hostAliases
  # clusterIP: 10.96.100.100

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Environment Variables - ConfigMap
# Add any non-sensitive environment variables here
# These will be stored in a ConfigMap
config:
  MAIN_S3_ENDPOINT: "https://s3.amazonaws.com"
  MIRROR_S3_ENDPOINT: "https://s3.us-west-000.backblazeb2.com"
  MIRROR_BUCKET_PREFIX: ""
  LOG_LEVEL: "info"

# Environment Variables - Secrets
# Add any sensitive environment variables here
# These will be stored in a Secret
secrets:
  MAIN_ACCESS_KEY: "your-main-s3-access-key"
  MAIN_SECRET_KEY: "your-main-s3-secret-key"
  MIRROR_ACCESS_KEY: "your-mirror-access-key"
  MIRROR_SECRET_KEY: "your-mirror-secret-key"
  POSTGRES_URL: "postgres://username:password@postgres-host:5432/s3_mirror"

# Pod configuration
podAnnotations:
  reloader.stakater.com/search: "true" # Auto-reload on ConfigMap/Secret changes

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
