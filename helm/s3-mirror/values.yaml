# Default values for s3-mirror
replicaCount: 2

image:
  repository: ghcr.io/starburst997/k8s-s3-mirror
  pullPolicy: Always
  tag: "latest"

# Ingress Configuration (for wildcard subdomain support)
# Enable this if you need virtual-hosted-style S3 (forcePathStyle: false)
# Note: Path-style (forcePathStyle: true) works without any ingress
ingress:
  enabled: true
  className: nginx-internal # Use an internal ingress controller
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Add other annotations as needed for your ingress controller
  hosts:
    - host: "*.s3.local" # Change to your internal domain
      paths:
        - path: /(.*)
          pathType: Prefix
  tls: [] # Configure TLS if needed for internal HTTPS

imagePullSecrets: []

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  # Optional: Set a fixed ClusterIP if you still want to use hostAliases
  # clusterIP: 10.96.100.100

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# S3 Configuration
s3:
  # Main S3 endpoint - the S3 service your applications currently use
  # This can be ANY S3-compatible service (AWS S3, MinIO, Wasabi, etc.)
  mainEndpoint: "https://s3.amazonaws.com"

  # Main S3 credentials - CHANGE THESE
  # The proxy uses these to access your primary S3
  mainAccessKey: "your-main-s3-access-key"
  mainSecretKey: "your-main-s3-secret-key"

  # Mirror S3 endpoint - where to replicate data for backup
  # Can be any S3-compatible service different from the main endpoint
  mirrorEndpoint: "https://s3.us-west-000.backblazeb2.com"

  # Mirror S3 credentials - CHANGE THESE
  # Used for the backup S3
  mirrorAccessKey: "your-mirror-access-key"
  mirrorSecretKey: "your-mirror-secret-key"

  # Optional: Prefix for mirror bucket names
  # Example: "mirror-" will make bucket "my-data" become "mirror-my-data"
  # Leave empty for no prefix
  mirrorBucketPrefix: ""

# PostgreSQL Configuration
postgresql:
  # Connection string - CHANGE THIS
  url: "postgres://username:password@postgres-host:5432/s3_mirror"

# Logging Configuration
logging:
  # Log level: debug, info, warn, error, fatal, off
  # Set to "error" or "off" to minimize disk usage
  level: "info"

# Pod configuration
podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
